
==================== FINAL INTERFACE ====================
2017-01-01 22:07:58.331456318 UTC

interface main@main:Main 8001
  interface hash: 992a83d3d457743609071b3c67057c92
  ABI hash: c9da760ac709a88216fd05d8238005a7
  export-list hash: 7167211beea69d02c9aad3f1a989b66d
  orphan hash: 78772dec85822bf0337ede9f04b3b8f6
  flag hash: 9e5f338ce207d20786a8a106331bf33a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-AKTYR0nthhUCHW4HMZvJFX
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-IGx6TJY2BPOHCk3x4WAuIK base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE
                      hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1
                      matrix-0.0.0@matrix-0.0.0-BxBoKAZUIVG5BcJi3zLlnJ
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-9HlGYelGmT69YkepeDjuRg
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-9HlGYelGmT69YkepeDjuRg:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
import  -/  base-4.9.0.0:Control.Arrow 29ee70aef11b50f3bae1135acf073ed5
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE:Test.Hspec 14607eabed7ee5cb9e00cea5b0e5fd5b
import  -/  hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE:Test.Hspec.Runner 225d05d92c61b32f3985e340e97893bb
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Runner 87cfc712e39ebe5a89fe51fdf073eca0
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Spec ff430398877912f227515ebc63ef8c69
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Spec.Monad 67900c815933a3bdde9443b7d30440e8
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Options df34d3f8ff522b3d6ecbfaa5ec0b4e8a
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations d35410a51e05b6ca33ee6df0940b15f9
import  -/  matrix-0.0.0@matrix-0.0.0-BxBoKAZUIVG5BcJi3zLlnJ:Matrix c64c729646ad7fb90ec47ef0cb3a8185
import  -/  vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector a0e152223d52c96cfbb5eb3d4ec6499a
c18eb449332f2c546c408a870a5174b5
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqInt)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqInt) -}
6eb378b931c40619b14e246e8b2671db
  $s$fEqMatrix :: GHC.Classes.Eq (Matrix.Matrix [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix [GHC.Types.Char])
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c==
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c/= -}
193f1fcd74d61cbd9979a02a9a4be8d2
  $s$fEqMatrix1 :: GHC.Classes.Eq [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
f7cbb89ef019e32b95a266fd70cd16d7
  $s$fEqMatrix2 :: GHC.Classes.Eq (Matrix.Matrix GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix GHC.Types.Char)
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c==1
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c/=1 -}
56e389f90891a7446514a90c874c1c7e
  $s$fEqMatrix3 :: GHC.Classes.Eq (Matrix.Matrix GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix GHC.Types.Int)
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c==2
                  Main.$s$fEqMatrix_$s$fEqMatrix_$c/=2 -}
95052f9ad8b12dbcd6fd95efb7d51934
  $s$fEqMatrix_$s$fEqMatrix_$c/= ::
    Matrix.Matrix [GHC.Types.Char]
    -> Matrix.Matrix [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Matrix.Matrix [GHC.Types.Char])
                   (y :: Matrix.Matrix [GHC.Types.Char]) ->
                 GHC.Classes.not (Main.$s$fEqMatrix_$s$fEqMatrix_$c== x y)) -}
e7a0e3f72f1dd4a165d3d98ad3f1356b
  $s$fEqMatrix_$s$fEqMatrix_$c/=1 ::
    Matrix.Matrix GHC.Types.Char
    -> Matrix.Matrix GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Matrix.Matrix GHC.Types.Char)
                   (y :: Matrix.Matrix GHC.Types.Char) ->
                 GHC.Classes.not (Main.$s$fEqMatrix_$s$fEqMatrix_$c==1 x y)) -}
b4b41043f2fe39c113cd698a68132b95
  $s$fEqMatrix_$s$fEqMatrix_$c/=2 ::
    Matrix.Matrix GHC.Types.Int
    -> Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Matrix.Matrix GHC.Types.Int)
                   (y :: Matrix.Matrix GHC.Types.Int) ->
                 GHC.Classes.not (Main.$s$fEqMatrix_$s$fEqMatrix_$c==2 x y)) -}
311ce058f1d4ec1dde3b11aafe2f0313
  $s$fEqMatrix_$s$fEqMatrix_$c== ::
    Matrix.Matrix [GHC.Types.Char]
    -> Matrix.Matrix [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Matrix.Matrix [GHC.Types.Char])
                   (ds1 :: Matrix.Matrix [GHC.Types.Char]) ->
                 case ds of wild { Matrix.Matrix ds2 ds3 ds4 ->
                 case ds1 of wild1 { Matrix.Matrix ds5 ds6 ds7 ->
                 Data.Vector.Fusion.Util.unId
                   @ GHC.Types.Bool
                   (Data.Vector.Fusion.Bundle.Monadic.eq
                      @ Data.Vector.Fusion.Util.Id
                      @ [GHC.Types.Char]
                      @ Data.Vector.Vector
                      Data.Vector.Fusion.Util.$fMonadId
                      Main.$s$fEqMatrix1
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ [GHC.Types.Char]
                         (Data.Vector.$fVectorVectora @ [GHC.Types.Char])
                         ds4)
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ [GHC.Types.Char]
                         (Data.Vector.$fVectorVectora @ [GHC.Types.Char])
                         ds7)) } }) -}
f6b15eaefacf94cdda948c4657f74152
  $s$fEqMatrix_$s$fEqMatrix_$c==1 ::
    Matrix.Matrix GHC.Types.Char
    -> Matrix.Matrix GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Matrix.Matrix GHC.Types.Char)
                   (ds1 :: Matrix.Matrix GHC.Types.Char) ->
                 case ds of wild { Matrix.Matrix ds2 ds3 ds4 ->
                 case ds1 of wild1 { Matrix.Matrix ds5 ds6 ds7 ->
                 Data.Vector.Fusion.Util.unId
                   @ GHC.Types.Bool
                   (Data.Vector.Fusion.Bundle.Monadic.eq
                      @ Data.Vector.Fusion.Util.Id
                      @ GHC.Types.Char
                      @ Data.Vector.Vector
                      Data.Vector.Fusion.Util.$fMonadId
                      GHC.Classes.$fEqChar
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Char
                         (Data.Vector.$fVectorVectora @ GHC.Types.Char)
                         ds4)
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Char
                         (Data.Vector.$fVectorVectora @ GHC.Types.Char)
                         ds7)) } }) -}
3d7cdf0fff741879c2cf652cf89de051
  $s$fEqMatrix_$s$fEqMatrix_$c==2 ::
    Matrix.Matrix GHC.Types.Int
    -> Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS(LSL)),1*U(A,A,1*U(U,U,U))><S(LLS(LSL)),1*U(A,A,1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Matrix.Matrix GHC.Types.Int)
                   (ds1 :: Matrix.Matrix GHC.Types.Int) ->
                 case ds of wild { Matrix.Matrix ds2 ds3 ds4 ->
                 case ds1 of wild1 { Matrix.Matrix ds5 ds6 ds7 ->
                 Data.Vector.Fusion.Util.unId
                   @ GHC.Types.Bool
                   (Data.Vector.Fusion.Bundle.Monadic.eq
                      @ Data.Vector.Fusion.Util.Id
                      @ GHC.Types.Int
                      @ Data.Vector.Vector
                      Data.Vector.Fusion.Util.$fMonadId
                      GHC.Classes.$fEqInt
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Int
                         (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                         ds4)
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Int
                         (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                         ds7)) } }) -}
68f2949344d8bfde6080bb4fa18c7ba8
  $s$fEqVector :: GHC.Classes.Eq (Data.Vector.Vector GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Vector.Vector GHC.Types.Int)
                  Main.$s$fEqVector_$s$fEqVector_$c==
                  Main.$s$fEqVector_$s$fEqVector_$c/= -}
4e4bb944a8f27fc8b9fab773d2322f57
  $s$fEqVector_$s$fEqVector_$c/= ::
    Data.Vector.Vector GHC.Types.Int
    -> Data.Vector.Vector GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSL),1*U(U,U,U)><S(LSL),1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (xs :: Data.Vector.Vector GHC.Types.Int)
                   (ys :: Data.Vector.Vector GHC.Types.Int) ->
                 GHC.Classes.not
                   (Data.Vector.Fusion.Util.unId
                      @ GHC.Types.Bool
                      (Data.Vector.Fusion.Bundle.Monadic.eq
                         @ Data.Vector.Fusion.Util.Id
                         @ GHC.Types.Int
                         @ Data.Vector.Vector
                         Data.Vector.Fusion.Util.$fMonadId
                         GHC.Classes.$fEqInt
                         (Data.Vector.Generic.stream
                            @ Data.Vector.Vector
                            @ GHC.Types.Int
                            (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                            xs)
                         (Data.Vector.Generic.stream
                            @ Data.Vector.Vector
                            @ GHC.Types.Int
                            (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                            ys)))) -}
ef6722f2e274b02c8a79c434d2994bd6
  $s$fEqVector_$s$fEqVector_$c== ::
    Data.Vector.Vector GHC.Types.Int
    -> Data.Vector.Vector GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSL),1*U(U,U,U)><S(LSL),1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (xs :: Data.Vector.Vector GHC.Types.Int)
                   (ys :: Data.Vector.Vector GHC.Types.Int) ->
                 Data.Vector.Fusion.Util.unId
                   @ GHC.Types.Bool
                   (Data.Vector.Fusion.Bundle.Monadic.eq
                      @ Data.Vector.Fusion.Util.Id
                      @ GHC.Types.Int
                      @ Data.Vector.Vector
                      Data.Vector.Fusion.Util.$fMonadId
                      GHC.Classes.$fEqInt
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Int
                         (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                         xs)
                      (Data.Vector.Generic.stream
                         @ Data.Vector.Vector
                         @ GHC.Types.Int
                         (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                         ys))) -}
083378e4fac4495bc10314a03c3f3c73
  $s$fShow(,) :: GHC.Show.Show (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt
                     GHC.Show.$fShowInt)
                  Main.$s$fShow(,)_$s$fShow(,)_$cshow
                  Main.$s$fShow(,)_$s$fShow(,)_$cshowList -}
273b5f6c59755ed62c6d55f400e29923
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (GHC.Types.Int, GHC.Types.Int) -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Int)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowInt
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
89b13342347bf69d6b5bec82c56a3558
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Int, GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Int, GHC.Types.Int)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Int
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   eta
                   eta1) -}
48476cb800ab95e2547daa87fcf8fb7c
  $s$fShowMatrix :: GHC.Show.Show (Matrix.Matrix [GHC.Types.Char])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix [GHC.Types.Char])
                  Main.$s$fShowMatrix2
                  (Matrix.$fShowMatrix_$cshow
                     @ [GHC.Types.Char]
                     Main.$s$fShowMatrix1)
                  (Matrix.$fShowMatrix_$cshowList
                     @ [GHC.Types.Char]
                     Main.$s$fShowMatrix1) -}
201717a72a122bc9c912a346ea1cdaad
  $s$fShowMatrix1 :: GHC.Show.Show [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Show.$fShow[]_$s$fShow[]1 -}
0f4db8f97ce521e167988edd0cbe80d1
  $s$fShowMatrix2 ::
    GHC.Types.Int -> Matrix.Matrix [GHC.Types.Char] -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S(S(S)LL),1*U(1*U(U),U(U),U(U,U,U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Matrix.Matrix [GHC.Types.Char])
                   (s :: GHC.Base.String) ->
                 case x of ww { Matrix.Matrix ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Matrix.$w$cshow
                         @ [GHC.Types.Char]
                         GHC.Show.$fShow[]_$s$fShow[]1
                         ww5
                         ww2
                         ww3))
                   s } }) -}
99d9adabb9c98e80007ed52275baaf8a
  $s$fShowMatrix3 :: GHC.Show.Show (Matrix.Matrix GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix GHC.Types.Char)
                  Main.$s$fShowMatrix_$s$fShowMatrix_$cshowsPrec
                  (Matrix.$fShowMatrix_$cshow @ GHC.Types.Char GHC.Show.$fShowChar)
                  (Matrix.$fShowMatrix_$cshowList
                     @ GHC.Types.Char
                     GHC.Show.$fShowChar) -}
6827e0a719508f834e7e64ba4e8a6083
  $s$fShowMatrix4 :: GHC.Show.Show (Matrix.Matrix GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Matrix.Matrix GHC.Types.Int)
                  Main.$s$fShowMatrix_$s$fShowMatrix_$cshowsPrec1
                  (Matrix.$fShowMatrix_$cshow @ GHC.Types.Int GHC.Show.$fShowInt)
                  (Matrix.$fShowMatrix_$cshowList
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt) -}
8ecf9ed3332f58101cec40c02c572cb2
  $s$fShowMatrix_$s$fShowMatrix_$cshowsPrec ::
    GHC.Types.Int -> Matrix.Matrix GHC.Types.Char -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S(S(S)LL),1*U(1*U(U),U(U),U(U,U,U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Matrix.Matrix GHC.Types.Char)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Matrix.$fShowMatrix_$cshow
                         @ GHC.Types.Char
                         GHC.Show.$fShowChar
                         x))
                   s) -}
ce724f34a3b12cd17bf8c6f5a8ac3037
  $s$fShowMatrix_$s$fShowMatrix_$cshowsPrec1 ::
    GHC.Types.Int -> Matrix.Matrix GHC.Types.Int -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S(S(S)LL),1*U(1*U(U),U(U),U(U,U,U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Matrix.Matrix GHC.Types.Int)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Matrix.$fShowMatrix_$cshow @ GHC.Types.Int GHC.Show.$fShowInt x))
                   s) -}
2352a5c1d7113116461bc2c5cc00bf1a
  $s$fShowVector :: GHC.Show.Show (Data.Vector.Vector GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Vector.Vector GHC.Types.Int)
                  Main.$s$fShowVector_$s$fShowVector_$cshowsPrec
                  (Data.Vector.$fShowVector_$cshow
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (Data.Vector.$fShowVector_$cshowList
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt) -}
34df72478e82c5d7619ed27672e6ddb6
  $s$fShowVector_$s$fShowVector_$cshowsPrec ::
    GHC.Types.Int -> Data.Vector.Vector GHC.Types.Int -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, False)
                (\ (eta :: GHC.Types.Int)
                   (eta1 :: Data.Vector.Vector GHC.Types.Int) ->
                 Main.$s$fShowVector_$sshows
                   (GHC.Base.build
                      @ GHC.Types.Int
                      (\ @ b (c :: GHC.Types.Int -> b -> b)[OneShot] (n :: b)[OneShot] ->
                       Data.Vector.Fusion.Bundle.toListFB
                         @ GHC.Types.Int
                         @ b
                         @ Data.Vector.Vector
                         c
                         n
                         (Data.Vector.Generic.stream
                            @ Data.Vector.Vector
                            @ GHC.Types.Int
                            (Data.Vector.$fVectorVectora @ GHC.Types.Int)
                            eta1)))) -}
005d3242a688dad5f47502dbdbac2681
  $s$fShowVector_$sshows :: [GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (GHC.Show.$fShow[]_$s$cshowsPrec GHC.Show.shows22) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
3c12579f7c757842014550c7b5d34715
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
4f7faf75e26c8c12a847712363936cca
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main400
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
0b58ed5b25807f0ef7c7db43040661c9
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main230
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main11) -}
4dad4e6e7b8a584816fec09bec4b9175
  main100 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 76#) -}
2fafd7bd2c9abd64cef9b58738a1da3d
  main101 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main102
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d27308a9a60672a5e2c48d8c6c9e2467
  main102 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main126
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main125
                        Main.main103
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
ff590bbdb00180badf8665bef1f05bb6
  main103 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (Data.Vector.Vector GHC.Types.Int)
                   Main.main121
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowVector
                   Main.$s$fEqVector
                   Main.main116
                   Main.main104) -}
a8f6812ada58de764aea06e4c745e69a
  main104 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main105 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
e2b3076e342bcc8722abae81bc72e0f8
  main105 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main115
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main106
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
961af4b2b7c6c2a7f095fe4334858095
  main106 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main113
                   Main.main107) -}
e5b2c2188d34cd46687b57494f0f1ca6
  main107 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main112
                   Main.main108) -}
05c152ed89bc61ca02664f861b9edfc1
  main108 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main111
                   Main.main109) -}
81051fe9113cf52023cddcc0e70c6460
  main109 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main110
                   (GHC.Types.[] @ GHC.Types.Int)) -}
6ae43f57d843f342237f632b349da406
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main207
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main12) -}
446192d504e77e422d4a9bcc180cf239
  main110 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
330461ff69afac2ce32311caa0728005
  main111 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3#) -}
cd9e44a63ae2d4a072e0ffdd0122939c
  main112 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
e5e2cbf90385d431862cba3248eb0c0e
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
7435bf8d4f43ba4d66d0d7130b0100d7
  main114 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
a56a8ad89c0657675412d16840ea6c5c
  main115 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
605e554b61402fb0c1524edc3a205ce2
  main116 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main117 of ww { (#,,#) ww1 ww2 ww3 ->
                 ww3 }) -}
722aab1f145279181531104750818ca9
  main117 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main118) -}
1360bdc5cd9a351e5887536eaa92d28c
  main118 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main119) -}
461c0332e9104a49134601ef9b5384b6
  main119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 2\n\
                   \3 4"#) -}
4dd275b09883bd9ed264d48c2958edba
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main176
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main13) -}
2c2afb4f548fbb1b636b4d448e90b162
  main120 :: GHC.Base.String -> [GHC.Types.Int]
  {- Arity: 1,
     Unfolding: (Matrix.parseLine @ GHC.Types.Int GHC.Read.$fReadInt) -}
812ad86ba248c5afcad0bae483088e42
  main121 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main122
                   GHC.Stack.Types.EmptyCallStack) -}
80cc19e1927d88d1edb386b17ade4f55
  main122 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main124
                   Main.main93
                   Main.main124
                   Main.main123) -}
0d501aab3e61c3b5d7574e4539da9ef3
  main123 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68#) -}
98cc742f8b809609418e128c2f9d082a
  main124 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 74#) -}
deafdeea3b976ba013bd786c3f9e219e
  main125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "flatten"#) -}
a2919bbe5d5df61ce0ef007a6995dc7a
  main126 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main127) -}
2fbf1b624ed63bfea4866ba6c22c5b36
  main127 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main128
                   GHC.Stack.Types.EmptyCallStack) -}
1567b824018a2b4aed66c87b6459ce30
  main128 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main130
                   Main.main52
                   Main.main130
                   Main.main129) -}
4bd256a4570176e43daeec9dea0dc3ef
  main129 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
4410108a8e92995138c1fca2da81680e
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main147
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main14) -}
80908a05f03860d0981d2d9f13db5694
  main130 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 73#) -}
ff3e7a112002bdf100ca4eb059ee2475
  main131 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main132
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
bd2adf5e7c8785f6e53560b822834e79
  main132 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main143
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main142
                        Main.main133
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
7e571ee2c09aeca59cc1def1940e4690
  main133 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix GHC.Types.Int)
                   Main.main138
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix4
                   Main.$s$fEqMatrix3
                   Main.main134
                   Main.main_x) -}
2052838b70b9759d409de3c0145a80ad
  main134 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main135 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww1 of ww11 { GHC.Types.I# ww12 ->
                 case ww2 of ww13 { GHC.Types.I# ww14 ->
                 case GHC.Prim.*# ww12 ww14 of wild {
                   DEFAULT
                   -> Matrix.Matrix
                        @ GHC.Types.Int
                        Matrix.$fMonoidMatrix6
                        Matrix.$fMonoidMatrix6
                        (Data.Vector.empty @ GHC.Types.Int)
                   4#
                   -> Matrix.Matrix
                        @ GHC.Types.Int
                        Main.main112
                        Main.main112
                        ww3 } } } }) -}
a3149b508b4904564440bfb9459f63d7
  main135 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main136) -}
7c4d0e96f17dda7c0f0a1d389661963e
  main136 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main137) -}
dc8c5ddb1faa20baa2a4992d10db9597
  main137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1 2 3 4"#) -}
86e3b214bcf4f5ccbc5b1e913ad3fd89
  main138 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main139
                   GHC.Stack.Types.EmptyCallStack) -}
33554a807c9c0c22b13636bcdd9c2a2d
  main139 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main141
                   Main.main93
                   Main.main141
                   Main.main140) -}
c14ee66bafbd6f968d37bcff52be7e3c
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main131
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main15) -}
f362c2275507e37f0cf41d2bd4e2e8fe
  main140 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 75#) -}
96b939a395488aca34879d73e8fa803b
  main141 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 71#) -}
80afdb75e1b61a38e40120cd7a6beb3b
  main142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "reshape"#) -}
5a539f80cd3e7dbfb942d816ddf86836
  main143 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main144) -}
bff43939f2f7355142418f17c4e78aab
  main144 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main145
                   GHC.Stack.Types.EmptyCallStack) -}
6b9b9b35c3d643f956e77a1d7ffb9e23
  main145 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main146
                   Main.main52
                   Main.main146
                   Main.main129) -}
c20089f4604c6df002c49e79c7a71637
  main146 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
ce237e449a3fe4896ff8ec5dd3a23c86
  main147 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main148
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
0e214eb1e0a11b62bb3f36d9c7153917
  main148 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main171
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main170
                        Main.main149
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
193f6581ef35a0a382c8100608c026c5
  main149 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Matrix.Matrix GHC.Types.Int)
                        Main.main168
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowMatrix4
                        Main.$s$fEqMatrix3
                        Main.main164
                        Main.main160
                        s of ds1 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix GHC.Types.Int)
                   Main.main158
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix4
                   Main.$s$fEqMatrix3
                   Main.main154
                   Main.main150
                   ipv }) -}
16c2a774154df9345cd9a9da86ccde15
  main15 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main101
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main16) -}
d997ca9311c06ffbecfe4304c1e2cd51
  main150 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main151 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
8192dd66b86577877e2a24c5ce50f393
  main151 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main152) -}
0a4ebad418affe14c8a5b0eed1c749c8
  main152 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main153) -}
cf0a33d05f84c7460da351db23fad292
  main153 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 2 3\n\
                   \4 5 6"#) -}
f77c800a555c6002b31632192db7c282
  main154 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main155 of ww { (#,,#) ww1 ww2 ww3 ->
                 case Matrix.$wtranspose
                        @ GHC.Types.Int
                        ww1
                        ww2
                        ww3 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 Matrix.Matrix @ GHC.Types.Int ww5 ww6 ww7 } }) -}
0feac84c39d99ac84910fdb267c2a8af
  main155 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main156) -}
270efbc1f8bde5deb956fb6d539c009e
  main156 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main157) -}
91f979690ec05eeaf0ebb01540a141a8
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 4\n\
                   \2 5\n\
                   \3 6"#) -}
3219ecc16c433c69d530ffdd5c30b774
  main158 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main159
                   GHC.Stack.Types.EmptyCallStack) -}
c1820684223bb1428d9167a904aee8ac
  main159 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main123
                   Main.main93
                   Main.main123
                   Main.main71) -}
b8495d33f9be9dd6a0a7de25313ae689
  main16 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main78
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main17) -}
4457d9389e5efd949874f65ae44c7459
  main160 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main161 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
512d5d5380f20f020c80b3d5f194b595
  main161 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main162) -}
3a94d1099a606bcf487f63950fc5252b
  main162 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main163) -}
a8300a8bef245da45ff917e17ae90049
  main163 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1 2 3"#) -}
59fd465f0ed45e4084a221aafe5b7d48
  main164 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main165 of ww { (#,,#) ww1 ww2 ww3 ->
                 case Matrix.$wtranspose
                        @ GHC.Types.Int
                        ww1
                        ww2
                        ww3 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 Matrix.Matrix @ GHC.Types.Int ww5 ww6 ww7 } }) -}
4ba5d26640fdae0ead4e1e0643d3f390
  main165 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main166) -}
24764384b1650093084724a1fbff2f67
  main166 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main167) -}
2b1b9fea96afd2b2055b5c7eb67c4d80
  main167 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1\n\
                   \2\n\
                   \3"#) -}
4b5469792deb33586fcf64d7ac3241b2
  main168 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main169
                   GHC.Stack.Types.EmptyCallStack) -}
c19214fc872709e8abf6ee94d19d5c86
  main169 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main39
                   Main.main93
                   Main.main39
                   Main.main130) -}
e7d0d8bf786a6cf0ec1afe1130a3ffde
  main17 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main55
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main18
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
af4bf16f0a55418eb9a7cfa66fd3865e
  main170 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "transpose"#) -}
f1953a6df5cef2735ed8697e7136deee
  main171 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main172) -}
0d81e5b89f8d6d45dadd9892c7b7a4fe
  main172 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main173
                   GHC.Stack.Types.EmptyCallStack) -}
7294ded360672dc97f474d72b5b4d267
  main173 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main175
                   Main.main52
                   Main.main175
                   Main.main174) -}
4d45de3612b0e554cfd1593ee2522008
  main174 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 19#) -}
531c850e25c7625b4c2cb096c7ec79a2
  main175 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 66#) -}
1627c534ae2d27c76994a815b888b3b3
  main176 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main177
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
7f5199f76c79f75a617fc57eb0e6a6da
  main177 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main202
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main201
                        Main.main178
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
bc638838db5e1326d109a9c4f6740ce5
  main178 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Matrix.Matrix GHC.Types.Int)
                        Main.main197
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowMatrix4
                        Main.$s$fEqMatrix3
                        Main.main194
                        Main.main_x2
                        s of ds1 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix GHC.Types.Int)
                   Main.main187
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix4
                   Main.$s$fEqMatrix3
                   Main.main182
                   Main.main_x1
                   ipv }) -}
b8a25d7d453232954f50087aa8e9b23a
  main179 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main180) -}
53b7368e2bb92b53e8cfdc649665dd73
  main18 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main19
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
06976f9759f126e65bb327fa0be68d0e
  main180 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main181) -}
fa82748300c447541a5b1d8dc2a71f61
  main181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1\n\
                   \2"#) -}
c56af1aaad4f863b476ece36ad1f7884
  main182 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main183 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
85bbda27824176e5a57506a5838dad16
  main183 :: [[GHC.Types.Int]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main186
                   Main.main184) -}
6908be8d0e0b7675c58049040554ad96
  main184 :: [[GHC.Types.Int]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main185
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
611a3e99109f1bb8a260473c0a673582
  main185 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main112
                   (GHC.Types.[] @ GHC.Types.Int)) -}
bed39c8dd675f880af9803e0c7bc405a
  main186 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main113
                   (GHC.Types.[] @ GHC.Types.Int)) -}
f92a6e77122153d8f4c87f85cb8e0d6b
  main187 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main188
                   GHC.Stack.Types.EmptyCallStack) -}
f680bc6cc0fc1129881a0df911ba9fa0
  main188 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main190
                   Main.main93
                   Main.main190
                   Main.main189) -}
7124b92e7fb30d3ea6a909d93a39cb24
  main189 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
fd1f5cf9df6768d9558f741cf329d408
  main19 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main48
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main47
                        Main.main20
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
8bf460d83fa9c5a0412cee6153ea2d28
  main190 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
32ba64f1e8af61d0a7040564c2acd74f
  main191 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main192) -}
884cb50943cf8ac258993ebe459bb3dd
  main192 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main193) -}
a752cd2b87c5b76fbe28d2f2db61e942
  main193 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1 2"#) -}
892f68195860b70567cfe8bd024a4185
  main194 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main195 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
492f6541f54daf29fc0390c082232993
  main195 :: [[GHC.Types.Int]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main196
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
dd001863a138d9e4a53a07c78cd0dcd8
  main196 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main113
                   Main.main185) -}
9e63e4221f74927fea5c98f0da16dd44
  main197 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main198
                   GHC.Stack.Types.EmptyCallStack) -}
32cfca78229a96f76c40c62c06125045
  main198 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main200
                   Main.main93
                   Main.main200
                   Main.main199) -}
850fa382ae68db0436d658b675cdcf44
  main199 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
27163c59841768cf822300ab882d8057
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
3fbcc35bcac0f130cc05fc20b67d7364
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix [GHC.Types.Char])
                   Main.main37
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix
                   Main.$s$fEqMatrix
                   Main.main32
                   Main.main21) -}
86b0db2b6577314fa2199434b3ddd140
  main200 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 63#) -}
fa02b6c71ff4f6a800792a8cb52edf7a
  main201 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fromList"#) -}
a135490d2f8848337e1e97e6d3b182ef
  main202 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main203) -}
6c0a672aad1fb0894d12838756db5f10
  main203 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main204
                   GHC.Stack.Types.EmptyCallStack) -}
ca33ada3139cfd88609db89aaeb82f51
  main204 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main206
                   Main.main52
                   Main.main206
                   Main.main205) -}
7709db106053d63692b256f5a2023311
  main205 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18#) -}
3efdda1fda6a8cfd7700ac539c39b2ea
  main206 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 62#) -}
d9dbee65fd8428d9f3d76574ffbb37e6
  main207 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main208
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
aa533ba72de1a5a43201d57c9dc59eaa
  main208 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main225
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main224
                        Main.main209
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
e54ab98793b9dc6d5c786da8fd2668e8
  main209 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Matrix.Matrix GHC.Types.Int)
                        Main.main220
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowMatrix4
                        Main.$s$fEqMatrix3
                        Main.main_x2
                        Main.main_x2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main217 of ww { (#,,#) ww1 ww2 ww3 ->
                 case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main161 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 case ww3 of v2 { Data.Vector.Vector ipv2 ipv3 ipv4 ->
                 case ww7 of v1 { Data.Vector.Vector ipv5 ipv6 ipv7 ->
                 letrec {
                   $weq_loop0 :: GHC.Types.SPEC
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> Data.Vector.Fusion.Util.Id GHC.Types.Bool
                     {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0] -}
                   = \ (w :: GHC.Types.SPEC)
                       (ww8 :: GHC.Prim.Int#)
                       (ww9 :: GHC.Prim.Int#) ->
                     case w of ds9 { DEFAULT ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww8 ipv3) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww9 ipv6) of wild1 {
                            GHC.Types.False
                            -> case GHC.Prim.indexArray#
                                      @ GHC.Types.Int
                                      ipv4
                                      (GHC.Prim.+# ipv2 ww8) of ds2 { Unit# ipv8 ->
                               case ipv8 of wild2 { GHC.Types.I# x ->
                               case GHC.Prim.indexArray#
                                      @ GHC.Types.Int
                                      ipv7
                                      (GHC.Prim.+# ipv5 ww9) of ds4 { Unit# ipv9 ->
                               case ipv9 of wild3 { GHC.Types.I# y ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# x y) of wild5 {
                                 GHC.Types.False
                                 -> GHC.Types.False
                                      `cast`
                                    (Sym (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Bool>_R))
                                 GHC.Types.True
                                 -> $weq_loop0
                                      GHC.Types.SPEC
                                      (GHC.Prim.+# ww8 1#)
                                      (GHC.Prim.+# ww9 1#) } } } } }
                            GHC.Types.True
                            -> GHC.Types.False
                                 `cast`
                               (Sym (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Bool>_R)) }
                       GHC.Types.True
                       -> (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# ww9 ipv6))
                            `cast`
                          (Sym (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Bool>_R)) } }
                 } in
                 case ($weq_loop0 GHC.Types.SPEC 0# 0#)
                        `cast`
                      (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Bool>_R) of wild {
                   GHC.Types.False -> (# ipv, GHC.Tuple.() #)
                   GHC.Types.True
                   -> (Test.HUnit.Lang.assertFailure
                         Main.main210
                           `cast`
                         (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                         (GHC.CString.unpackAppendCString#
                            "not expected: "#
                            (case ww1 of ww8 { GHC.Types.I# ww9 ->
                             Matrix.$w$cshow @ GHC.Types.Int GHC.Show.$fShowInt ww9 ww2 v2 })))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv } } } } } }) -}
ccdaf8ea4583f10042b1c2f20f680e3f
  main21 :: Matrix.Matrix [GHC.Types.Char]
  {- Unfolding: (case Matrix.$wfromList
                        @ [GHC.Types.Char]
                        Main.main22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ [GHC.Types.Char] ww1 ww2 ww3 }) -}
8cdae11d7d849c56e9a957ab35e7775d
  main210 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.expectationFailure8
                   Test.Hspec.Expectations.expectationFailure1
                   Main.main211) -}
a56ad00e38ec6acedb556ee2c016254d
  main211 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe10
                   Test.Hspec.Expectations.shouldBe7
                   Main.main212) -}
a59f4f2c5ab93f1b46a7fb85c45b75dd
  main212 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldNotBe2
                   Main.main213) -}
2a86f7868cfd754bd01eb35e9121b89c
  main213 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main216
                   Main.main214
                   GHC.Stack.Types.EmptyCallStack) -}
029efabc8521d97318357ae9f82a2d53
  main214 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main215
                   Main.main93
                   Main.main215
                   Main.main189) -}
21b836db33198cd549cf4d31937fa834
  main215 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60#) -}
e6685a36568b2dec9cd1b8a007eb997b
  main216 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldNotBe"#) -}
a550f74f37b23a12c27f9b938c154ab3
  main217 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main218) -}
44e1cdfeb6ab8e789a7a1ef270b5353e
  main218 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main219) -}
55df7a0be603cd04a409dc39ff07fea9
  main219 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "2 3"#) -}
5be0036bbaf26c45658008acec1f3c7a
  main22 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Types.:
                   @ [[GHC.Types.Char]]
                   Main.main28
                   Main.main23) -}
0866f73ee92ae96976be91ddd17ebd1e
  main220 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main221
                   GHC.Stack.Types.EmptyCallStack) -}
378b110a49b66b404e99e64ed8c38092
  main221 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main223
                   Main.main93
                   Main.main223
                   Main.main222) -}
910a5914f2e535177caa983b86c056ff
  main222 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52#) -}
5342d355c22c092ca5b3a3d43f0654e7
  main223 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 59#) -}
b658f00a6cb245ca851a931eedf8aa6c
  main224 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eq"#) -}
5736453f532ff492186761462f77b2e6
  main225 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main226) -}
03c457fa0b6f3f88ab36c035bd922b43
  main226 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main227
                   GHC.Stack.Types.EmptyCallStack) -}
a41bd2ba60d6e8469f05eaa36e5e55b0
  main227 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main229
                   Main.main52
                   Main.main229
                   Main.main228) -}
0c0990acc42b5207447954ecd86f78f1
  main228 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
e186f2cf71ffb89a8f6fadca473571a7
  main229 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 57#) -}
398764cadf4e8ecf05375b9a9e84c0db
  main23 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Types.:
                   @ [[GHC.Types.Char]]
                   Main.main24
                   (GHC.Types.[] @ [[GHC.Types.Char]])) -}
50db597bdbdad047b76d992b8d5af232
  main230 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main231
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
02c28f1251faab9850abce426870835b
  main231 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main242
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main241
                        Main.main232
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
c52ff698f7e612a8fbbe10cb40a6701a
  main232 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main237
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow(,)
                   Main.$s$fEq(,)
                   Main.main234
                   Main.main233) -}
b1c77ddb25752a993c54edb1d04a4ab1
  main233 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main113, Main.main112)) -}
e18c7700301e5ea0c21e3c72dfd722bb
  main234 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main236, Main.main235)) -}
9f7712a7cc09d6e7a891433b98f735b2
  main235 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x2 of wild { Matrix.Matrix ds1 ds2 ds3 ->
                 ds2 }) -}
5c27a37d3fee8721bfbb1ff14d128ad7
  main236 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x2 of wild { Matrix.Matrix ds1 ds2 ds3 ->
                 ds1 }) -}
6e68f0ac89a63685b2cf862de674e3f6
  main237 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main238
                   GHC.Stack.Types.EmptyCallStack) -}
a1a255aabb6ea49264169e78f9b175c2
  main238 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main240
                   Main.main93
                   Main.main240
                   Main.main239) -}
4cffa82938082a8d8062e5520c05863a
  main239 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58#) -}
561c1bf85b3257474af4f893211be72c
  main24 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main27
                   Main.main25) -}
dc58b379aae686811873e091cf66bee3
  main240 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 55#) -}
8122c0e9f746efd02e958eeb9784e3e4
  main241 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rows & cols"#) -}
3ce64f41ff1fa17c97d1bd00c1ba5f20
  main242 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main243) -}
0bbb6221e235a74e79f50b3dbb742c05
  main243 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main244
                   GHC.Stack.Types.EmptyCallStack) -}
5cc5ebc731186db566b645b24f8e89c5
  main244 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main189
                   Main.main52
                   Main.main189
                   Main.main245) -}
402d36efa6bce9f3ec6fd50c0916d55d
  main245 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
44fe9317a21f7303351c486a85f9a6e8
  main246 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main247
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
680d83bc6bb8eef769076544ed7ed508
  main247 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main287
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main286
                        Main.main248
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
5f9a3baf74ea677533a13464d54f56ec
  main248 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (GHC.Types.Int, GHC.Types.Int)
                        Main.main283
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShow(,)
                        Main.$s$fEq(,)
                        Main.main278
                        Main.main277
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (GHC.Types.Int, GHC.Types.Int)
                        Main.main274
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShow(,)
                        Main.$s$fEq(,)
                        Main.main268
                        Main.main267
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (GHC.Types.Int, GHC.Types.Int)
                        Main.main265
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShow(,)
                        Main.$s$fEq(,)
                        Main.main262
                        Main.main261
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (GHC.Types.Int, GHC.Types.Int)
                        Main.main258
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShow(,)
                        Main.$s$fEq(,)
                        Main.main255
                        Main.main233
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main253
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow(,)
                   Main.$s$fEq(,)
                   Main.main250
                   Main.main249
                   ipv6 } } } }) -}
c0fe39c8939fb5b14b9391d75390bdc9
  main249 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main112, Main.main112)) -}
7c4c507a3efdaa081677c5309701089b
  main25 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main26
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
845ab47f0d118a8eb079f4dc62ef06fc
  main250 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main252, Main.main251)) -}
fa5b615ef959035310cf39ffc0206916
  main251 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds1 }) -}
75047e69fd603c8e8074ab96e32362eb
  main252 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds }) -}
51eec87e839700ceecba6bcabba1b648
  main253 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main254
                   GHC.Stack.Types.EmptyCallStack) -}
36cbcefdeeac6f3c1311a4c14e79f0f5
  main254 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main222
                   Main.main93
                   Main.main222
                   Main.main199) -}
63d89ff03276e409a57bf93e912c0ba7
  main255 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main257, Main.main256)) -}
e9416f9f33122891194f4de824546860
  main256 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x2 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds1 }) -}
cce3421d2806c184080a67064a218838
  main257 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x2 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds }) -}
274e1f10e3b25707dcc4f38e53f49755
  main258 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main259
                   GHC.Stack.Types.EmptyCallStack) -}
ba3c155ffde7d24b2cdcbb5238da4531
  main259 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main260
                   Main.main93
                   Main.main260
                   Main.main199) -}
6e18d4ca6779c693cc2c94104988165e
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "really tricky"#) -}
afc6ae76a47f866562659b258bd6ee93
  main260 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
b214b374f7a9d663f448288b617a4b67
  main261 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main112, Main.main113)) -}
f5b81e83ab503c07976648df85b6b1f1
  main262 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main264, Main.main263)) -}
498d41268cb151cbc2c6a906015439d4
  main263 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x1 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds1 }) -}
79ee485213cf830cf86a3d96a4e4de17
  main264 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x1 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds }) -}
0330f08e5c27dcb3f24fe793f9ab9827
  main265 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main266
                   GHC.Stack.Types.EmptyCallStack) -}
7fe66dcf7fb6ac74434098fe86333865
  main266 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main69
                   Main.main93
                   Main.main69
                   Main.main199) -}
7ce3888cf97167111d3f9aab487bc0fe
  main267 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main113, Main.main113)) -}
0f88fb6d8b03ddfb1a6f8b0434d47cac
  main268 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main273, Main.main269)) -}
cd9c89e2c8b86c789be5160f7bc56b96
  main269 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x3 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds1 }) -}
fbdd1e46ba012bb58358fdb8db10f935
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "may be tricky!"#) -}
b88bc134e5f3135c6e3934df8c32860d
  main270 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main271) -}
c823b90e24c4950da9f3c6616a16a197
  main271 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main272) -}
aedbeec10b3904b2a1ed76ba73160af7
  main272 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1"#) -}
d63a05d80b0c80c76fe39b6765254899
  main273 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x3 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds }) -}
6b2978b3c4d0a59fe6a6b7f55fa79626
  main274 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main275
                   GHC.Stack.Types.EmptyCallStack) -}
b88fee1adad73e4f1987087e2c450c3b
  main275 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main276
                   Main.main93
                   Main.main276
                   Main.main199) -}
4efb4224f8a128180600b18c536c0df6
  main276 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49#) -}
5263746a33cd07d9028e32b4c8c0e916
  main277 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main114, Main.main114)) -}
287abdb51cc7bc656bbbe3f396983b17
  main278 :: (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: ((Main.main282, Main.main279)) -}
e9911ff518d9d5d22ebc871566f646bc
  main279 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x4 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds1 }) -}
975429be0d5aa80cd6a82c9a7d3d030f
  main28 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main31
                   Main.main29) -}
949db4ab4d82159f0b0fdf934739bad0
  main280 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main281) -}
aaffa3a8b0877c0f0188cddc23972754
  main281 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8d4f2075a24cc35827411935ef95becb
  main282 :: GHC.Types.Int
  {- Unfolding: (case Main.main_x4 of wild { Matrix.Matrix ds ds1 ds2 ->
                 ds }) -}
cf3476f2ed5fe5a0b9c4ef117a713e07
  main283 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main284
                   GHC.Stack.Types.EmptyCallStack) -}
2760d0f9d2f87e4a84ac081d762a3f86
  main284 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main285
                   Main.main93
                   Main.main285
                   Main.main199) -}
4b609f658d8ae63836136075f6412977
  main285 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
889031ed257378f46a8174cb76bbbc48
  main286 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shape"#) -}
17cb71544348786d401bb478cc0f2d10
  main287 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main288) -}
b0622b1b96ed1108d76acfbd14408491
  main288 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main289
                   GHC.Stack.Types.EmptyCallStack) -}
ed5b1f4bdd3c966d24d7060a0ccfbec7
  main289 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main291
                   Main.main52
                   Main.main291
                   Main.main290) -}
64b823ee14d18cf25d8eaabc786522aa
  main29 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main30
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
fbb89f7045829bca559877240adc2dc3
  main290 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
77bae8bcedb889479b70512db0efe0e1
  main291 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47#) -}
ee703546002e6c1933ad50ac960b0a74
  main292 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main293
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
b3b1b7dba1f3f2268c3a499e755eeafd
  main293 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main325
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main324
                        Main.main294
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
845b67c4440e8698a20a541c3ed5d150
  main294 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main320
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowVector
                        Main.$s$fEqVector
                        Main.main316
                        Main.main309
                        s of ds1 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (Data.Vector.Vector GHC.Types.Int)
                   Main.main304
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowVector
                   Main.$s$fEqVector
                   Main.main300
                   Main.main295
                   ipv }) -}
15790bd5c11f0b4895d6be7cb126c010
  main295 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main296 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
e1754fd3475bd11e160c99026f342623
  main296 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main299
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main297
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
c7ab9f4afb37e0de31f00e4173972ff2
  main297 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main298
                   Main.main108) -}
965c3821a6c2f242f78249c2342809ab
  main298 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1903#) -}
829c0cbf72ce3a2ec3469a528abf3c03
  main299 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
f45bc0304b229ad4bf3e55bd21416484
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
413f50988c4f06c160ab0ab250baaa79
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "one"#) -}
587192a603f391aa28328b8133b755e4
  main300 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main301 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww3 of ww4 { Data.Vector.Vector ww5 ww6 ww7 ->
                 Matrix.$wcolumn
                   @ GHC.Types.Int
                   Main.main113
                   ww1
                   ww2
                   ww5
                   ww6
                   ww7 } }) -}
92c1a8d3e063431cbd69ce409ae71195
  main301 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main302) -}
e405be6c9e217304a589584b9128321c
  main302 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main303) -}
eb838167d464f162de81693753835321
  main303 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "89 1903 3\n\
                   \18 3 1\n\
                   \9 4 800"#) -}
a3feaa35d0d2170a02853fe4fc4eea5c
  main304 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main305
                   GHC.Stack.Types.EmptyCallStack) -}
11eb4d8277f924205960d5b84dcb7aaf
  main305 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main308
                   Main.main93
                   Main.main307
                   Main.main306) -}
8f6d40d30c3830b21743493cdac04bc2
  main306 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
ddbcd28f32b663da33c3ecbcfefe9584
  main307 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45#) -}
d18903bf94bb84c91e2b9f5c7ad2909d
  main308 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44#) -}
39c657a15a44adad78f2a14ebe65fbf9
  main309 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main310 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
121427c9ead9d929b1683b7ecf9633d4
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "this one"#) -}
820925020f1490bc4303b6c84c5bda7b
  main310 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main315
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main311
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
5907bd41f00093c8f2e20a97bfa58f5d
  main311 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main113
                   Main.main312) -}
dcc103d9be92ce54de3e93aa6573a7b0
  main312 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main110
                   Main.main313) -}
80f3d3080594a1a78d04788276701a67
  main313 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main93
                   Main.main314) -}
a4b6818572929d1473fbc2ecbdb5758b
  main314 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main41
                   (GHC.Types.[] @ GHC.Types.Int)) -}
ee71c15065c2c5a5969f8e13d209e95d
  main315 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
d12d79c09ccd67a5ead561bfac7c3c1e
  main316 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main317 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww3 of ww4 { Data.Vector.Vector ww5 ww6 ww7 ->
                 Matrix.$wcolumn
                   @ GHC.Types.Int
                   Main.main114
                   ww1
                   ww2
                   ww5
                   ww6
                   ww7 } }) -}
e97d8708856a3448ae961972fb608dde
  main317 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main318) -}
55cb694915b04701b102125d36468042
  main318 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main319) -}
3613e279d47fb98f10c64353289df255
  main319 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 2 3\n\
                   \4 5 6\n\
                   \7 8 9\n\
                   \ 8 7 6"#) -}
c2706cf91e72fac9eca9e0840ee59fad
  main32 :: Matrix.Matrix [GHC.Types.Char]
  {- Unfolding: (case Matrix.$wfromList
                        @ [GHC.Types.Char]
                        Main.main33 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ [GHC.Types.Char] ww1 ww2 ww3 }) -}
d2a1810d244a5b4e07386b8407392c70
  main320 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main321
                   GHC.Stack.Types.EmptyCallStack) -}
114fe0d7c7397dc735e9f25b5e931b69
  main321 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main323
                   Main.main93
                   Main.main322
                   Main.main306) -}
7b8025a690f529865eb41ab7e8402667
  main322 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
5fbba8fa571aadb5ee384a34573bc5a4
  main323 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
e60d76880d57881a61c8f02ee968a361
  main324 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "extract first column"#) -}
1ac9c1591d85bfc5ea5976546cbe0f0e
  main325 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main326) -}
0b932b2bcddfdbf9b568593cdd102f34
  main326 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main327
                   GHC.Stack.Types.EmptyCallStack) -}
b756f9af45ea92a1dae584cee7614a2b
  main327 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main329
                   Main.main52
                   Main.main329
                   Main.main328) -}
f61c0694fca9c6b78cc06ae9a6598d2d
  main328 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
d22d9bb41dfa541a1547b2d3b8b0fbda
  main329 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
929452b56961bb139e4bb04ee7491a4b
  main33 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [[GHC.Types.Char]]
                   Main.main36
                   Main.main34) -}
dcab96a3f69c4e95a7984cfd8942ecdf
  main330 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main331
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
cc73063ee0f077599944430b105f6c24
  main331 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main361
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main360
                        Main.main332
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
0302db856bcb17f0457841d85fe44745
  main332 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main357
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowVector
                        Main.$s$fEqVector
                        Main.main353
                        Main.main347
                        s of ds1 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (Data.Vector.Vector GHC.Types.Int)
                   Main.main345
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowVector
                   Main.$s$fEqVector
                   Main.main341
                   Main.main333
                   ipv }) -}
356f9639094451ea81358c1b3cce9210
  main333 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main334 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
f1e767875ccd151b3d90e666f80c58be
  main334 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main340
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main335
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
5401a0e57d201eb6b1feb97e9d046327
  main335 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main339
                   Main.main336) -}
abcd0edc71a014e6c084a902037463be
  main336 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main99
                   Main.main337) -}
0558090cfab9a6244880f5bea2b3db76
  main337 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main338
                   (GHC.Types.[] @ GHC.Types.Int)) -}
2fb132736f9efd6cd5b78413c66f469b
  main338 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
b80f29a428fd851d7a096a60ecb9d196
  main339 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16#) -}
709a9ccdd6da00f57f500eacccbb541f
  main34 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main35) -}
5854f526e14ea4cc543935ed880194c6
  main340 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
0915469d2b221979f22b0493bad23930
  main341 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main342 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww2 of ww6 { GHC.Types.I# ww7 ->
                 case ww3 of ww8 { Data.Vector.Vector ww9 ww10 ww11 ->
                 case Matrix.$wrow
                        @ GHC.Types.Int
                        1#
                        ww7
                        ww9
                        ww10
                        ww11 of ww12 { (#,,#) ww13 ww14 ww15 ->
                 Data.Vector.Vector @ GHC.Types.Int ww13 ww14 ww15 } } } }) -}
afe1016edece540a31e0ea299e574035
  main342 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main343) -}
e7ad7e386c0bf9577ddc245e9d764b5a
  main343 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main344) -}
1fb660e395c32a466376cb633a50b271
  main344 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 4 9\n\
                   \16 25 36"#) -}
8b8bebed2b9e5102d57f92eae76a7b14
  main345 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main346
                   GHC.Stack.Types.EmptyCallStack) -}
af0f4b04473d7c8a984ae3bae1c9e96f
  main346 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main306
                   Main.main93
                   Main.main306
                   Main.main130) -}
d442c9789d86e93f44a087a3b008cced
  main347 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main348 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b4fd1d2bfc5abce3ad379633ccbe2642
  main348 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main352
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main349
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
2a292d5312bee1ac0470baf52ab0414b
  main349 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main174
                   Main.main350) -}
cc91b7d7592141886bcecaaf5a9b09f0
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\"this one\" \"one\" \n\
                   \\"may be tricky!\" \"really tricky\""#) -}
c8c9c76c85be2fbb8f59d73b2d74d7b3
  main350 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main205
                   Main.main351) -}
414ffa68b443845b67b553124c1b702f
  main351 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main129
                   (GHC.Types.[] @ GHC.Types.Int)) -}
f664e8759b195237c27c511ad3042392
  main352 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
d35203c9c42dfbbf30260f1a4492ccd2
  main353 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main354 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww2 of ww6 { GHC.Types.I# ww7 ->
                 case ww3 of ww8 { Data.Vector.Vector ww9 ww10 ww11 ->
                 case Matrix.$wrow
                        @ GHC.Types.Int
                        1#
                        ww7
                        ww9
                        ww10
                        ww11 of ww12 { (#,,#) ww13 ww14 ww15 ->
                 Data.Vector.Vector @ GHC.Types.Int ww13 ww14 ww15 } } } }) -}
44c679ce621e260f8b4193cffe593d68
  main354 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main355) -}
7dabc2bc1c734919ba350514918a20e2
  main355 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main356) -}
2b8b27b57f9e57a55b5106531c719da5
  main356 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "9 8 7\n\
                   \19 18 17"#) -}
06f664d7facda0fb67e01fe3ccaf36bd
  main357 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main358
                   GHC.Stack.Types.EmptyCallStack) -}
bcc988623899c5a0ec2ee639343eef9b
  main358 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main359
                   Main.main93
                   Main.main359
                   Main.main130) -}
e27823090dac1e52b4f98a4a7228935f
  main359 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
8b4ca7bd91c7976b286f4ad0a3f5c9b7
  main36 :: GHC.Base.String -> [[GHC.Types.Char]]
  {- Arity: 1,
     Unfolding: (Matrix.parseLine
                   @ [GHC.Types.Char]
                   GHC.Read.$fRead[]_$s$fRead[]1) -}
fbcaa39d00be65d012619061878deb2d
  main360 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "extract second row"#) -}
c3e06dad0ac439a85752b18e598c9161
  main361 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main362) -}
7c33f34d8c4bdc76a48e33eacdaf0b96
  main362 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main363
                   GHC.Stack.Types.EmptyCallStack) -}
9d4d72bb198028b140d971619e503396
  main363 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main365
                   Main.main52
                   Main.main365
                   Main.main364) -}
a8b8b9a06099642161bf14602cb94302
  main364 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
8baf96fd95b2e01044e5b31a0643d3a3
  main365 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
1f924a6aa7233c300233257a20755a88
  main366 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main367
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
b719338c5528785e1d2e9e8a56930fb8
  main367 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main393
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main392
                        Main.main368
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
3d31899de175eff51e9c95973e68f7e7
  main368 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Expectations.shouldBe1
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main389
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Main.$s$fShowVector
                        Main.$s$fEqVector
                        Main.main385
                        Main.main382
                        s of ds1 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ (Data.Vector.Vector GHC.Types.Int)
                   Main.main379
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowVector
                   Main.$s$fEqVector
                   Main.main375
                   Main.main369
                   ipv }) -}
7ee4eb781d0cc46ae7aab9702e8c8bf1
  main369 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main370 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
0f2c1b45dfd3da161d49a75e464392e5
  main37 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main38
                   GHC.Stack.Types.EmptyCallStack) -}
26ca5684fd12297cbc77fec9257d8aa4
  main370 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main374
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main371
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
c1fb5676567aed81413c022f4af91192
  main371 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main373
                   Main.main372) -}
373a3152267584b7576ca321aa48d9de
  main372 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main93
                   (GHC.Types.[] @ GHC.Types.Int)) -}
cf7cd83d5123f3c338e52a3a8ee3cc8b
  main373 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9#) -}
1753927497c1fc7a0957ffcbb2b1c9f0
  main374 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
bc7b23a4cbcc6f5fcf3acd6d5603cd9c
  main375 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main376 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww2 of ww6 { GHC.Types.I# ww7 ->
                 case ww3 of ww8 { Data.Vector.Vector ww9 ww10 ww11 ->
                 case Matrix.$wrow
                        @ GHC.Types.Int
                        0#
                        ww7
                        ww9
                        ww10
                        ww11 of ww12 { (#,,#) ww13 ww14 ww15 ->
                 Data.Vector.Vector @ GHC.Types.Int ww13 ww14 ww15 } } } }) -}
6b8b2a9f26332ea32274b3b3477ca406
  main376 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main377) -}
a8910111be4ebf073f518accf7c53054
  main377 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main378) -}
12d4bf79e0090e34e52a4575977b8fda
  main378 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "9 7\n\
                   \8 6"#) -}
511b1c41f08e79cc5acdbc0511a39938
  main379 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main380
                   GHC.Stack.Types.EmptyCallStack) -}
64a2c54cd928d222b609c1b2dcb404e5
  main38 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main42
                   Main.main41
                   Main.main40
                   Main.main39) -}
dff8d9988e556f730604d09bf0e5cf36
  main380 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main381
                   Main.main93
                   Main.main381
                   Main.main206) -}
2bdee3155c2628a5e5f8c86b008c8cff
  main381 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35#) -}
720d1d46148755e10e2b2fac497a1156
  main382 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector GHC.Types.Int)
                        Main.main383 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
398ecf14301c71fe166507cd2086427a
  main383 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector GHC.Types.Int #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case Main.main384
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState
                                 (GHC.ST.ST GHC.Prim.RealWorld))
                            @ GHC.Types.Int
                            0#
                            0#
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST
                                                                             GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N),
                         Main.main114)
                        Main.main196
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
5f0429a6dadbb37c98ee3e03c1f3e5bc
  main384 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          GHC.Types.Int,
        GHC.Types.Int)
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
f7c146ce6e4b7bb493c8933d91e3470f
  main385 :: Data.Vector.Vector GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main386 of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww2 of ww6 { GHC.Types.I# ww7 ->
                 case ww3 of ww8 { Data.Vector.Vector ww9 ww10 ww11 ->
                 case Matrix.$wrow
                        @ GHC.Types.Int
                        0#
                        ww7
                        ww9
                        ww10
                        ww11 of ww12 { (#,,#) ww13 ww14 ww15 ->
                 Data.Vector.Vector @ GHC.Types.Int ww13 ww14 ww15 } } } }) -}
9cc259a06369a5deab8bbb6fcec6f940
  main386 :: [[GHC.Types.Int]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Int]
                   Main.main120
                   Main.main387) -}
411549f424146532c7405d6cfe7f5386
  main387 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main388) -}
7a3b6df7dbeec6e54fa78d734d469156
  main388 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 2\n\
                   \10 20"#) -}
5c0a6b4cabca8e677b376a6aa6321c6f
  main389 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main390
                   GHC.Stack.Types.EmptyCallStack) -}
867cbbb1b78d1d631042ef2a635bd58e
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 67#) -}
219b4d94452ab9317a8bc6812961d3af
  main390 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main391
                   Main.main93
                   Main.main391
                   Main.main206) -}
4c2e1959c4a181f1ca25f771cca438ad
  main391 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
01b953f96a6a1389913a257b2dcecd68
  main392 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "extract first row"#) -}
accc4e4f842dd10c533d6e1c011a40cc
  main393 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main394) -}
bb8d1f92611f51dd624bbe3477de279d
  main394 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main395
                   GHC.Stack.Types.EmptyCallStack) -}
b5a9b6a4c996e89176d52ce8471290d3
  main395 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main396
                   Main.main52
                   Main.main396
                   Main.main76) -}
304fcbb033227a8e46b5c8ec9a3ec95e
  main396 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
692e0586659d0417bb865c4102b30cb0
  main397 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main399
                   Main.main398) -}
d3b1ef1a61495f406995d65586c65c6d
  main398 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "atrix"#) -}
76183ad16590bc6a2efde0131f437845
  main399 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'm'#) -}
df2a7c92635adaff811910641732eecd
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
4c1cda2befe82d7b5c708d45967166a3
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 87#) -}
30d192bc2cab6651fa75068ac29d7eda
  main400 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
b8923c79e7acdc8c4c2854e262409c7b
  main401 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
be459cadd656d1b2f83defc9c28453e3
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8#) -}
5705539c9a3961f77d8741cf8e45ee00
  main42 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 85#) -}
454e4d7838e00736e07d96f698c0657e
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
9400e97d10a15c6303f5678c3b22dbf6
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
0e34e3a073259880230dfb01629a7371
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
25ac1706ec22c26f14fbb9f115d2f5e3
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
eac018635ef6c92ee16c7cb976b1039b
  main47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "matrix of strings 2"#) -}
914099a19e9c60285d22318b2c810bb4
  main48 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main49) -}
c34be79b0526c5570525fd76d9cefa34
  main49 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main50
                   GHC.Stack.Types.EmptyCallStack) -}
9dd08707f8503cd87b0cb03596edf175
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main397
                   Main.main6) -}
0eea5866596fa79267fe2dbe2af91ccb
  main50 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main53
                   Main.main52
                   Main.main53
                   Main.main51) -}
eafad50537fb2c87b4799597f2ec9ee4
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
3e081076e81168a8c59ee49448d4cafa
  main52 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
249b99f465a619c693c89d64869c19a1
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 84#) -}
d804b2587d795fd4101ba8ec6025d3dc
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
d41c56881f3f9e1ec677e8c2573fdf8b
  main55 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main56
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
aed6f653c9612ddf155908d75c339d86
  main56 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main73
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main72
                        Main.main57
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
52b5e65d8b589922ef6dab81439d7c5c
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix [GHC.Types.Char])
                   Main.main67
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix
                   Main.$s$fEqMatrix
                   Main.main63
                   Main.main58) -}
cd51b27504ffd9f5f4011371cf7448b1
  main58 :: Matrix.Matrix [GHC.Types.Char]
  {- Unfolding: (case Matrix.$wfromList
                        @ [GHC.Types.Char]
                        Main.main59 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ [GHC.Types.Char] ww1 ww2 ww3 }) -}
9a63caf7c6c61a342506b33a0d02c08c
  main59 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Types.:
                   @ [[GHC.Types.Char]]
                   Main.main62
                   Main.main60) -}
0c3710d6d5955692137e50dda6a6cce3
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main366
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
663e994757102168cbe8337add3ba569
  main60 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Types.:
                   @ [[GHC.Types.Char]]
                   Main.main61
                   (GHC.Types.[] @ [[GHC.Types.Char]])) -}
e979a3675feace78d577cd19eed85aa6
  main61 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main27
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
54b2503bc205b31608111d2ecc8e8897
  main62 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main31
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
606022f03d3ba7ca4fc1fea3a76a3a0e
  main63 :: Matrix.Matrix [GHC.Types.Char]
  {- Unfolding: (case Matrix.$wfromList
                        @ [GHC.Types.Char]
                        Main.main64 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ [GHC.Types.Char] ww1 ww2 ww3 }) -}
b834d287d7b341f18b081a6e8a67f01c
  main64 :: [[[GHC.Types.Char]]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [[GHC.Types.Char]]
                   Main.main36
                   Main.main65) -}
1c13e8e58998d2442ea7fdf481e26702
  main65 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main66) -}
96a410c21d338cb6c0691bdd714b407f
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\"this one\"\n\
                   \\"may be tricky!\""#) -}
0b5f103f5a505119feebd26e03b30f3e
  main67 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main68
                   GHC.Stack.Types.EmptyCallStack) -}
3b264f83340eb0838ac942f59efbcae1
  main68 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main71
                   Main.main41
                   Main.main70
                   Main.main69) -}
de9392c6361a16504a8e3dfd6f53350f
  main69 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50#) -}
0cc43414b6ed25d3eb05c36e7de23135
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main330
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
db8a3051d1835f8107c47a4729f9d767
  main70 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 82#) -}
7c74c2616378b7a8058148837f9cd294
  main71 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 80#) -}
55038538aec7a44881c7f1347afd43f6
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "matrix of strings"#) -}
39e4984b022fc3cda1797558cebce2c4
  main73 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main74) -}
cb80e039b7a3b65b5d83b0087164c2d4
  main74 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main75
                   GHC.Stack.Types.EmptyCallStack) -}
7bf3461ebf127a3fe33b765d60050d8b
  main75 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main77
                   Main.main52
                   Main.main77
                   Main.main76) -}
43bbbee4b42b0b5b0b4e170e3643eff3
  main76 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
a1c47af0c23c47fee00ba7bc010cff74
  main77 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 79#) -}
293f94b2eea1ed5bcd67c30afb4e2949
  main78 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main79
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
b07b14e94d0050c2dee39c5bd6580c18
  main79 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main96
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main95
                        Main.main80
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
e7f99b56b35b107516de715d44aca424
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main292
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9) -}
2f2cc35efdad4cd2813d5d89ed67d18a
  main80 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (Matrix.Matrix GHC.Types.Char)
                   Main.main91
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShowMatrix3
                   Main.$s$fEqMatrix2
                   Main.main86
                   Main.main81) -}
d0fc172f4c87a448e78faf4af552d08c
  main81 :: Matrix.Matrix GHC.Types.Char
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Char
                        Main.main82 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Char ww1 ww2 ww3 }) -}
43c2004ce401f3389c285433dec773b5
  main82 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main85
                   Main.main83) -}
143492aba108779e5a9a82f77fd7280e
  main83 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.main84
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
721ba20b1b8cd5b35422aadfb9132951
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bar"#) -}
192df82b1d3b5839e97ce9540a110e7b
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "foo"#) -}
2033dd6c5e59816e9e86ae2353c9dd47
  main86 :: Matrix.Matrix GHC.Types.Char
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Char
                        Main.main87 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Char ww1 ww2 ww3 }) -}
f2b58b3d27ea0856de03ef736f4bac8f
  main87 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   Main.main90
                   Main.main88) -}
5d5e604c0bedc70302edbe9248d3ece1
  main88 :: [GHC.Base.String]
  {- Unfolding: (Data.OldList.lines Main.main89) -}
c8772575154f9af45d2f8e9df1198d2c
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "'f' 'o' 'o'\n\
                   \'b' 'a' 'r'"#) -}
a34240a08286a72309b13822b804769d
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main246
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main10) -}
576a8a45df8ee2593f868f20cad13042
  main90 :: GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (Matrix.parseLine
                   @ GHC.Types.Char
                   GHC.Read.$fReadChar) -}
e1b7ddd6603e4c180c17322af83bb1db
  main91 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main92
                   GHC.Stack.Types.EmptyCallStack) -}
5bb79ffb1d2a1ed8dabab0221dbf06ad
  main92 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main94
                   Main.main93
                   Main.main94
                   Main.main77) -}
8bef7bd4f5216865050cc522c7e8ce2e
  main93 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
b6b9d02aa58da72bfd23bfdf80f8d023
  main94 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 77#) -}
a52bab628c02ff8fc788519cb4c18c0c
  main95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "matrix of chars"#) -}
f92a9d6183b7a46fd890a21ddea9f218
  main96 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main97) -}
1864e17a34892a99653c2f96e6a9ef72
  main97 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main98
                   GHC.Stack.Types.EmptyCallStack) -}
294f128c4a1a2383d391675011936757
  main98 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main100
                   Main.main52
                   Main.main100
                   Main.main99) -}
b5f2788df18f76f544d11501a5a031bf
  main99 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
a4bbf0c9c7242b58dfc7029715980d0c
  main_x :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main117 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
90713d628ce10c65873a2de50b7b2cac
  main_x1 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main179 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
20b7a84c2578383856a1cbd24c6b3ff0
  main_x2 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main191 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
4fd74472f74f0bdd1cc5d7c37bb32679
  main_x3 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main270 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
dfd030cf6a8640d4a5e64f26ac4e0032
  main_x4 :: Matrix.Matrix GHC.Types.Int
  {- Unfolding: (case Matrix.$wfromList
                        @ GHC.Types.Int
                        Main.main280 of ww { (#,,#) ww1 ww2 ww3 ->
                 Matrix.Matrix @ GHC.Types.Int ww1 ww2 ww3 }) -}
"SPEC/Main $fEq(,) @ Int @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                           GHC.Types.Int)
                                                ($dEq1 :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEq(,)
"SPEC/Main $fEqMatrix @ Char" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                         GHC.Types.Char)
  Matrix.$fEqMatrix @ GHC.Types.Char $dEq = Main.$s$fEqMatrix2
"SPEC/Main $fEqMatrix @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                        GHC.Types.Int)
  Matrix.$fEqMatrix @ GHC.Types.Int $dEq = Main.$s$fEqMatrix3
"SPEC/Main $fEqMatrix @ [Char]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                           [GHC.Types.Char])
  Matrix.$fEqMatrix @ [GHC.Types.Char] $dEq = Main.$s$fEqMatrix
"SPEC/Main $fEqMatrix_$c/= @ Char" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                              GHC.Types.Char)
  Matrix.$fEqMatrix_$c/= @ GHC.Types.Char $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c/=1
"SPEC/Main $fEqMatrix_$c/= @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Types.Int)
  Matrix.$fEqMatrix_$c/= @ GHC.Types.Int $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c/=2
"SPEC/Main $fEqMatrix_$c/= @ [Char]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                [GHC.Types.Char])
  Matrix.$fEqMatrix_$c/= @ [GHC.Types.Char] $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c/=
"SPEC/Main $fEqMatrix_$c== @ Char" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                              GHC.Types.Char)
  Matrix.$fEqMatrix_$c== @ GHC.Types.Char $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c==1
"SPEC/Main $fEqMatrix_$c== @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Types.Int)
  Matrix.$fEqMatrix_$c== @ GHC.Types.Int $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c==2
"SPEC/Main $fEqMatrix_$c== @ [Char]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                [GHC.Types.Char])
  Matrix.$fEqMatrix_$c== @ [GHC.Types.Char] $dEq
  = Main.$s$fEqMatrix_$s$fEqMatrix_$c==
"SPEC/Main $fEqVector @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                        GHC.Types.Int)
  Data.Vector.$fEqVector @ GHC.Types.Int $dEq = Main.$s$fEqVector
"SPEC/Main $fEqVector_$c/= @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Types.Int)
  Data.Vector.$fEqVector_$c/= @ GHC.Types.Int $dEq
  = Main.$s$fEqVector_$s$fEqVector_$c/=
"SPEC/Main $fEqVector_$c== @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Types.Int)
  Data.Vector.$fEqVector_$c== @ GHC.Types.Int $dEq
  = Main.$s$fEqVector_$s$fEqVector_$c==
"SPEC/Main $fShow(,) @ Int @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                               GHC.Types.Int)
                                                  ($dShow1 :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,) @ GHC.Types.Int @ GHC.Types.Int $dShow $dShow1
  = Main.$s$fShow(,)
"SPEC/Main $fShow(,)_$cshow @ Int @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                      GHC.Types.Int)
                                                         ($dShow1 :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Int
                            @ GHC.Types.Int
                            $dShow
                            $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Main $fShow(,)_$cshowList @ Int @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                          GHC.Types.Int)
                                                             ($dShow1 :: GHC.Show.Show
                                                                           GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Int
                                @ GHC.Types.Int
                                $dShow
                                $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshowList
"SPEC/Main $fShowMatrix @ Char" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                             GHC.Types.Char)
  Matrix.$fShowMatrix @ GHC.Types.Char $dShow = Main.$s$fShowMatrix3
"SPEC/Main $fShowMatrix @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                            GHC.Types.Int)
  Matrix.$fShowMatrix @ GHC.Types.Int $dShow = Main.$s$fShowMatrix4
"SPEC/Main $fShowMatrix @ [Char]" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                               [GHC.Types.Char])
  Matrix.$fShowMatrix @ [GHC.Types.Char] $dShow = Main.$s$fShowMatrix
"SPEC/Main $fShowMatrix_$cshowsPrec @ Char" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                         GHC.Types.Char)
  Matrix.$fShowMatrix_$cshowsPrec @ GHC.Types.Char $dShow
  = Main.$s$fShowMatrix_$s$fShowMatrix_$cshowsPrec
"SPEC/Main $fShowMatrix_$cshowsPrec @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        GHC.Types.Int)
  Matrix.$fShowMatrix_$cshowsPrec @ GHC.Types.Int $dShow
  = Main.$s$fShowMatrix_$s$fShowMatrix_$cshowsPrec1
"SPEC/Main $fShowVector @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                            GHC.Types.Int)
  Data.Vector.$fShowVector @ GHC.Types.Int $dShow
  = Main.$s$fShowVector
"SPEC/Main $fShowVector_$cshowsPrec @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        GHC.Types.Int)
  Data.Vector.$fShowVector_$cshowsPrec @ GHC.Types.Int $dShow
  = Main.$s$fShowVector_$s$fShowVector_$cshowsPrec
"SPEC/Main shows @ [Int]" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                       [GHC.Types.Int])
  GHC.Show.shows @ [GHC.Types.Int] $dShow
  = Main.$s$fShowVector_$sshows
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

