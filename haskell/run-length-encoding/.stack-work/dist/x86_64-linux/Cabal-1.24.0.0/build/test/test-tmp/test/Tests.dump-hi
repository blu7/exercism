
==================== FINAL INTERFACE ====================
2017-01-07 12:53:08.130627604 UTC

interface main@main:Main 8001
  interface hash: 337ab60a8cb3466d54bdc53623a70c9b
  ABI hash: 97183539614d5b1430b3a5811cd4ab10
  export-list hash: c84e16e1baa225bfde3b183c761ee405
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e41b3fd987c77e6dfc73ff1a54299dcd
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      StateVar-1.1.0.4@StateVar-1.1.0.4-49DJlv5H4c7r7bJPDG6IK
                      adjunctions-4.3@adjunctions-4.3-DdaVzHtQIdKKcIMAtenkpN
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-AKTYR0nthhUCHW4HMZvJFX
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-BxXaXM4de7bF6SGXMvMtbC
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-IGx6TJY2BPOHCk3x4WAuIK
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-8poMzD5ooNXJ4NDLaelDWq
                      base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2ceCZ3Fm7x67ZwaaR7uQ3C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-BKRb0wHFpEyDJWTsyjQqnp
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      charset-0.3.7.1@charset-0.3.7.1-85hvTn97TA57rw44la5NP2
                      comonad-5@comonad-5-1roHbXsedY6KUNYFgPJLp6
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-89BvpwBnlCJ6iFzBGVF7XO
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-2AokE99FpE59iSGkvIRYC4
                      exceptions-0.8.3@exceptions-0.8.3-5cAKIsqc1DD7jaNW3zLxAN
                      fingertree-0.1.1.0@fingertree-0.1.1.0-C6YFXKIQXOA6HvmvFT5gT9
                      free-4.12.4@free-4.12.4-LcxMyZIxIoo6h2gqXah9QK
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-GnltDttmBjG9qGzcjuPOH4
                      hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE
                      hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-JxnJF79ehCQ1iWfDSDGjll
                      lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      parsec-3.1.11@parsec-3.1.11-IYEP8Lv1S9x5FeUQxGPDBY
                      parsers-0.12.4@parsers-0.12.4-8Rdt352V1Dr8vcnHZcwN0v
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-CUL7kUu4nBbDVNmgOaH64k
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      reducers-3.12.1@reducers-3.12.1-76CqkbVLMgaBRGzGyW61zq
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      run-length-encoding-0.0.0@run-length-encoding-0.0.0-7rWo8wRvHm1DM3tEESKTA2
                      scientific-0.3.4.9@scientific-0.3.4.9-Ghl8M4Ey2fMI7e1yk2TuuH
                      semigroupoids-5.1@semigroupoids-5.1-5WI5yrkqR6b5vppUpisNlN
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-9HlGYelGmT69YkepeDjuRg
                      tagged-0.8.5@tagged-0.8.5-I7Gu0uzBLkQJCVUvdvwKKq
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      trifecta-1.6@trifecta-1.6-END84YM8o5kJXqDzJgqxmv
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-6Q3w38ZivLTB9nLFgf8RUI
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-GnltDttmBjG9qGzcjuPOH4:Data.Hashable.Generic
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq:Test.QuickCheck.IO
         reducers-3.12.1@reducers-3.12.1-76CqkbVLMgaBRGzGyW61zq:Data.Semigroup.Instances
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-9HlGYelGmT69YkepeDjuRg:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         trifecta-1.6@trifecta-1.6-END84YM8o5kJXqDzJgqxmv:Text.Trifecta.Instances
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-DdaVzHtQIdKKcIMAtenkpN:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-8poMzD5ooNXJ4NDLaelDWq:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-EBkHk3WI7L87dRJGvKP176:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Example
                         kan-extensions-5.0.1@kan-extensions-5.0.1-JxnJF79ehCQ1iWfDSDGjll:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-JxnJF79ehCQ1iWfDSDGjll:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.At
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.Reified
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.Tuple
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-2LZrGLWR827Eaze7Qa59gb:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-CUL7kUu4nBbDVNmgOaH64k:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-I7Gu0uzBLkQJCVUvdvwKKq:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text
                         text-1.2.2.1@text-1.2.2.1-FgcR4Xf0VlEHD9HLxzq9WJ:Data.Text.Lazy
                         trifecta-1.6@trifecta-1.6-END84YM8o5kJXqDzJgqxmv:Text.Trifecta.Delta
                         trifecta-1.6@trifecta-1.6-END84YM8o5kJXqDzJgqxmv:Text.Trifecta.Rendering
                         trifecta-1.6@trifecta-1.6-END84YM8o5kJXqDzJgqxmv:Text.Trifecta.Rope
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-6Q3w38ZivLTB9nLFgf8RUI:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-6Q3w38ZivLTB9nLFgf8RUI:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE:Test.Hspec 14607eabed7ee5cb9e00cea5b0e5fd5b
import  -/  hspec-2.2.4@hspec-2.2.4-3D5wf20RIvqHmaOeNrJfqE:Test.Hspec.Runner 225d05d92c61b32f3985e340e97893bb
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Runner 87cfc712e39ebe5a89fe51fdf073eca0
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Spec ff430398877912f227515ebc63ef8c69
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Core.Spec.Monad 67900c815933a3bdde9443b7d30440e8
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-Bd5P9zxjXwW2mqykOWcNqb:Test.Hspec.Options df34d3f8ff522b3d6ecbfaa5ec0b4e8a
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations d35410a51e05b6ca33ee6df0940b15f9
import  -/  run-length-encoding-0.0.0@run-length-encoding-0.0.0-7rWo8wRvHm1DM3tEESKTA2:RunLength 917e8763b809253f3ce161788edee5e7
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
af71e7b29631d98a6560d1be9a93e896
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main23
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldBe1
                                     @ GHC.Base.String
                                     Main.main13
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     GHC.Show.$fShow[]_$s$fShow[]1
                                     GHC.Classes.$fEq[]_$s$fEq[]1
                                     (RunLength.parse'
                                        RunLength.encode1
                                          `cast`
                                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Base.String>_R))
                                        ww1)
                                     ww2)
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww3 { Unit# ww4 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww4 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
9b0a340fbec4008cf463b3d8e12631f6
  $wc1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main23
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldBe1
                                     @ GHC.Base.String
                                     Main.main13
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     GHC.Show.$fShow[]_$s$fShow[]1
                                     GHC.Classes.$fEq[]_$s$fEq[]1
                                     (RunLength.parse'
                                        RunLength.decode1
                                          `cast`
                                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Base.String>_R))
                                        ww1)
                                     ww2)
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww3 { Unit# ww4 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww4 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
b78f97389f8258ceec566bbc374cc40d
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Base.String,
            expected :: GHC.Base.String}
b3ffdd12148c2d9cea37a32bb0ac2ce9
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
bc1ffbae2b969e01a930af6a25372fd2
  expected :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
547df147235bd178632b314cfaa8dd45
  input :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
6cc9ebedc83487908362a128cfb60cee
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9201f3daa377d958217c5c9a8fee0f11
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main62
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
a65ea2b301d3df2a03261ef352a373b6
  main10 :: GHC.Base.String
  {- Unfolding: (case Text.Trifecta.Parser.parseString
                        @ [GHC.Base.String]
                        Main.main11
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <[GHC.Base.String]>_R))
                        Text.Trifecta.Delta.$fMonoidDelta_$cmempty
                        Main.main8 of wild4 {
                   Text.Trifecta.Result.Success a2
                   -> letrec {
                        go :: [[GHC.Types.Char]] -> [GHC.Types.Char] {- Arity: 1 -}
                        = \ (ds :: [[GHC.Types.Char]]) ->
                          case ds of wild {
                            [] -> GHC.Types.[] @ GHC.Types.Char
                            : y ys
                            -> let {
                                 z :: [GHC.Types.Char] = go ys
                               } in
                               letrec {
                                 go1 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                                 = \ (ds1 :: [GHC.Types.Char]) ->
                                   case ds1 of wild1 {
                                     [] -> z : y1 ys1 -> GHC.Types.: @ GHC.Types.Char y1 (go1 ys1) }
                               } in
                               go1 y }
                      } in
                      go a2
                   Text.Trifecta.Result.Failure a2
                   -> GHC.Types.[] @ GHC.Types.Char }) -}
55213f0a1104d4cfe11fcce7f996b77c
  main11 ::
    ([GHC.Base.String]
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> ([GHC.Base.String]
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Unfolding: (Text.Trifecta.Parser.$fAlternativeParser1
                   @ GHC.Base.String
                   RunLength.encode1
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Base.String>_R))) -}
92b8670f453d41462fb05864637e2f87
  main12 ::
    ([GHC.Base.String]
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> ([GHC.Base.String]
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Unfolding: (Text.Trifecta.Parser.$fAlternativeParser1
                   @ GHC.Base.String
                   RunLength.decode1
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Base.String>_R))) -}
4f1a559d1b27053d7c246ffb276511ea
  main13 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main21
                   Main.main14
                   GHC.Stack.Types.EmptyCallStack) -}
5f6c4addc01e34f8e15efe0467128356
  main14 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main20
                   Main.main19
                   Main.main18
                   Main.main17
                   Main.main16
                   Main.main17
                   Main.main15) -}
fc2279fd69a3423488769b6b2f3f02de
  main15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67#) -}
51b551955eefe13249a0180fed770176
  main16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
8fd468536b51863a73d880beb3fe3a3a
  main17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
ac58a4c129871546bfe10574945225b7
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
52db5a3d3efa5e028abe71b70d93887f
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
fd2468121cbf8837b81b1c063f1d4521
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Main.$wc1
                        Main.main61
                        (GHC.Types.[] @ GHC.Types.Char)
                        (GHC.Types.[] @ GHC.Types.Char)
                        Main.main55
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Main.$wc
                        Main.main54
                        (GHC.Types.[] @ GHC.Types.Char)
                        (GHC.Types.[] @ GHC.Types.Char)
                        Main.main41
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main38
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main35
                                (case ipv1 of wild { (,) ds3 w1 -> w1 }))
                             (GHC.Types.:
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ()))
                                (Test.Hspec.Core.Tree.Node
                                   @ (Test.Hspec.Core.Example.ActionWith ())
                                   @ (Test.Hspec.Core.Tree.Item ())
                                   Main.main32
                                   (case ipv3 of wild { (,) ds3 w1 -> w1 }))
                                Main.main3)))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) } }) -}
0ee348176d67436eb2c2586d16d4a272
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
f0dbda06793e3e1f0c996a02ff8acee2
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
59e0f31174b6eae35dd2004af5c21bcf
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "decode . encode combination"#) -}
d9d8bc7a1c4a7a1ade092d28fd5f3064
  main23 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main24) -}
e0f216f37732e55295bbb20cf20079cb
  main24 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main28
                   Main.main25
                   GHC.Stack.Types.EmptyCallStack) -}
dc9880d26b21fa984e74a9b7f5a9d0bc
  main25 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main20
                   Main.main19
                   Main.main18
                   Main.main17
                   Main.main27
                   Main.main17
                   Main.main26) -}
7417255d2024a65142596fc4c45bd26d
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 37#) -}
45453f159f2773afb3fb251d7b3a6151
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
90db1a9746dce722f607e5a99148854b
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
a724804747540c63b1ca0d3711e31697
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main31
                   Main.main30) -}
3b07153ba7f218f02adb26fe0c24addf
  main3 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main4
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
dd2c31ae23ad97e61685f834481e077a
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "oth"#) -}
524cee842d3cc4f35e4efccfcb059df0
  main31 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'b'#) -}
653ed7faee85635942795f74839ce394
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main33) -}
16dde3e442aedc26f74a11c1ff7f122a
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ncode"#) -}
7e36523912a6e17f99f7cf44d3385006
  main34 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'e'#) -}
fd41dda2613c378140d1b4b6522eab2c
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main36) -}
67febaae99617aa1ebea908f1b9dc57f
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ecode"#) -}
886428a4c2f30964756ef06652dd615b
  main37 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd'#) -}
401a60bb25d59af75369210a12db0530
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main40
                   Main.main39) -}
fce2809c0d888c0284e982914caaef63
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "un-length-encoding"#) -}
134cf1bff1881e208537bf3dd25279fe
  main4 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main29
                   Main.main5
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
878d13187d86a722b4252d44f2ca242f
  main40 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
ba0bdb50fd425c511b2fb1a228091af5
  main41 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main53
                   Main.main52
                   Main.main52
                   Main.main42
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
2df712ca34909bab8e01688c571a17e6
  main42 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main51
                   Main.main50
                   Main.main49
                   Main.main43
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
d75bae9d4f7a408d26c7a4bae5aeddc2
  main43 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main48
                   Main.main47
                   Main.main46
                   Main.main44
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
25470eeb840b1a7a54ca67c629883e8a
  main44 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main45 #)) -}
9526d09718214a10570251e41b27810b
  main45 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
56b57f90f4767940a58eaa55dd3116b6
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "12WB12W3B24WB"#) -}
b6c6cdc507c885efffc5354af8f2d807
  main47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB"#) -}
27cd8fabb4c53139dc6fbb864a681eb2
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "encode with single values"#) -}
964af2cb72ffebd080bbcce418a78287
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "2A3B4C"#) -}
eaa5111402db01722f6ef219af06983e
  main5 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main6
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
653962a21de9f78a7dda52c1c5399781
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AABBBCCCC"#) -}
205fe1368065e44e4520dc30e0e66047
  main51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "encode simple"#) -}
c296db9a84688e5e7769d752743e4ddf
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "XYZ"#) -}
c5e59d06034e91cc79b8a2af4c6ff93e
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "encode single characters only"#) -}
66385f0e11757908f821af641de52004
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "encode empty string"#) -}
86e100fb226cea62b24738ba0a51439d
  main55 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main60
                   Main.main52
                   Main.main52
                   Main.main56
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
543713cc619523a850573dfe2f4a013b
  main56 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main59
                   Main.main49
                   Main.main50
                   Main.main57
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
a22104226a8790fb5b5a1892ce1a16db
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main58
                   Main.main46
                   Main.main47
                   Main.main44
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
5b644225f2ec57b1814f0955e8a5f1f9
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "decode with single values"#) -}
bdfdcbc1489130605924623f771bf4ef
  main59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "decode simple"#) -}
f30f3086ced1998297f91f9e5039bdb9
  main6 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main23
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main22
                        Main.main7
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
75409cbf423e0d9ace9016ff8ad0a655
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "decode single characters only"#) -}
514e1b4611f75e741584755ab596ea51
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "decode empty string"#) -}
110480b75cc9409bf57f634f04901d13
  main62 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
44016ea2ba9a0e4580587bcc61a32ea0
  main63 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
58be5e9beded0ebab5c9c5df3c7fe891
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Base.String
                   Main.main13
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShow[]_$s$fShow[]1
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   Main.main9
                   Main.main8) -}
b7d1d1b74f30d23631914bb5783550bf
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "zzz ZZ  zZ"#) -}
1b702a0ed6f46d9245bcd898a313ec14
  main9 :: GHC.Base.String
  {- Unfolding: (case Text.Trifecta.Parser.parseString
                        @ [GHC.Base.String]
                        Main.main12
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <[GHC.Base.String]>_R))
                        Text.Trifecta.Delta.$fMonoidDelta_$cmempty
                        Main.main10 of wild4 {
                   Text.Trifecta.Result.Success a2
                   -> letrec {
                        go :: [[GHC.Types.Char]] -> [GHC.Types.Char] {- Arity: 1 -}
                        = \ (ds :: [[GHC.Types.Char]]) ->
                          case ds of wild {
                            [] -> GHC.Types.[] @ GHC.Types.Char
                            : y ys
                            -> let {
                                 z :: [GHC.Types.Char] = go ys
                               } in
                               letrec {
                                 go1 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                                 = \ (ds1 :: [GHC.Types.Char]) ->
                                   case ds1 of wild1 {
                                     [] -> z : y1 ys1 -> GHC.Types.: @ GHC.Types.Char y1 (go1 ys1) }
                               } in
                               go1 y }
                      } in
                      go a2
                   Text.Trifecta.Result.Failure a2
                   -> GHC.Types.[] @ GHC.Types.Char }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

