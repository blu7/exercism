
==================== FINAL INTERFACE ====================
2016-11-07 15:04:33.96606871 UTC

interface raindrops-0.0.0-2WrW8yfWhOMEyccwhWv2qL:Raindrops 8001
  interface hash: e5f6fe39016d53ee15c620f707eee52a
  ABI hash: 375db7c6d16d5d8e67b19e9311288cc1
  export-list hash: 160f9d38ce64c8e39adfe5c81d6e447a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Raindrops.convert
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
30c84a7ea986a25f6b16f6a986dc2835
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Raindrops.$trModule2
                   Raindrops.$trModule1) -}
46c16848385aba0bc166d745327036f0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Raindrops"#) -}
b0b738d766d949fb5feb5e98225460e0
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "raindrops-0.0.0-2WrW8yfWhOMEyccwhWv2qL"#) -}
85bc16e3402290146e384029c2e01f42
  $wconvert :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   r :: [GHC.Types.Int]
                   = case GHC.Classes.modInt# ww 5# of ww2 {
                       DEFAULT
                       -> case GHC.Classes.modInt# ww 7# of ww1 {
                            DEFAULT -> GHC.Types.[] @ GHC.Types.Int 0# -> Raindrops.convert3 }
                       0#
                       -> GHC.Types.:
                            @ GHC.Types.Int
                            Raindrops.convert2
                            (case GHC.Classes.modInt# ww 7# of ww1 {
                               DEFAULT -> GHC.Types.[] @ GHC.Types.Int
                               0# -> Raindrops.convert3 }) }
                 } in
                 case GHC.Classes.modInt# ww 3# of ww2 {
                   DEFAULT
                   -> case r of wild {
                        []
                        -> case GHC.Show.$wshowSignedInt
                                  0#
                                  ww
                                  (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }
                        : ipv ipv1 -> Raindrops.convert_go wild }
                   0#
                   -> Raindrops.convert_go
                        (GHC.Types.: @ GHC.Types.Int Raindrops.convert1 r) }) -}
07780dedccce1200adecbf5b031b6020
  convert :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Raindrops.$wconvert ww1 }) -}
9fa7a25d223a797b475c5587da85e82e
  convert1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
15ac04e7e68bd494f379a7edaa57434a
  convert2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
1453d6bf9040f7e93d9b339df065b76e
  convert3 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Raindrops.convert4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
a1dd021106ef0a6920488f736e54f505
  convert4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
b09ea72077f82e0eaa2120a92b10a22c
  convert_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

