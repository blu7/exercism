
==================== FINAL INTERFACE ====================
2016-10-11 17:32:17.796445119 UTC

interface grade-school-0.0.0-GrvN3igBivb4lrKJuDTF9G:School 8001
  interface hash: 26ab837b6c8e29edd5ae84d5059ff7a5
  ABI hash: b1f4edf77c5709d4a2107a06bd765463
  export-list hash: 2ab1e3d71b1c39aec8ee657ae007bff4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  School.add
  School.empty
  School.grade
  School.sorted
  School.School
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Tuple acb0ed10307ed88df6c81b8589f4de16
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
8ebb3ef84ef4eaef2d87475c66286e8a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   School.$trModule2
                   School.$trModule1) -}
9591f9afc2b1d7f64e3f94f9471b91e1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "School"#) -}
269d005f13954e63cfb9125533c1f68d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "grade-school-0.0.0-GrvN3igBivb4lrKJuDTF9G"#) -}
383d55f87f1de203fdd56b4977b477b2
  $wadd ::
    School.Grade
    -> School.Student
    -> School.School
    -> (# (School.Grade, School.Students),
          [(School.Grade, School.Students)] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
c9d8ebb67dbdf2836a09d75ad1d86a1c
  type Grade = GHC.Types.Int
63c90b7f508d49d020a21ebef487ed8d
  type School = [(School.Grade, School.Students)]
be72c070a810665fc3c4551ad99c5ceb
  type Student = GHC.Base.String
cc80e27b9da5f8ecddc5ea8edcd6b573
  type Students = [School.Student]
0dcc4348ccbbb77905e60df4b3808f04
  add ::
    School.Grade -> School.Student -> School.School -> School.School
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,U><S,1*U>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: School.Grade)
                   (w1 :: School.Student)
                   (w2 :: School.School) ->
                 case School.$wadd w w1 w2 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ (School.Grade, School.Students) ww1 ww2 }) -}
5947d4e513201ee76b181affeec4a8d1
  empty :: School.School
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (GHC.Types.[] @ (School.Grade, School.Students)) -}
a5b1eac3b0d03ae24cab25a15605ddc1
  grade :: GHC.Types.Int -> School.School -> School.Students
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S,1*U> -}
7f3d0416a7e39a33c80e2b4a2b3ed8e9
  sorted :: School.School -> [(GHC.Types.Int, School.Students)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

