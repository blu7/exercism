
==================== FINAL INTERFACE ====================
2016-10-11 18:46:20.11251709 UTC

interface list-ops-0.0.0-Ai8mePA9FkLCGuoZoCGLnx:ListOps 8001
  interface hash: a48599b35bb5b06f795c4fa0ee841aea
  ABI hash: 79717964cea82aec0f199a60611807b9
  export-list hash: ec10dee2afe3c4d31c5e17184cc87ca0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  ListOps.++
  ListOps.concat
  ListOps.filter
  ListOps.foldl'
  ListOps.foldr
  ListOps.length
  ListOps.map
  ListOps.reverse
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
6c6426e9c53f06ac11a8c32786500ede
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ListOps.$trModule2
                   ListOps.$trModule1) -}
33189df9baaccf850369c2c6ca88a5ab
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ListOps"#) -}
35643501fbcf196d9d84249c7d844f71
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "list-ops-0.0.0-Ai8mePA9FkLCGuoZoCGLnx"#) -}
ba0b86e2e12b12e615b193a55e2d3806
  $wlength :: [a] -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
aef5cec38038be3701a08aecc643fa89
  (++) :: [a] -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
b18661d8e88e70e86f092a081276b31e
  concat :: [[a]] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
6b2f5dd2a0220ee5aeefab059328eb84
  filter :: (a -> GHC.Types.Bool) -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
b4b19fc69fad629401ac59bf0a61bd6e
  foldl' :: (b -> a -> b) -> b -> [a] -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U><S,1*U> -}
7ebc7bf55f11360253608d0218902cab
  foldr :: (a -> b -> b) -> b -> [a] -> b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U))><L,1*U><S,1*U> -}
93f5d65d6b28783f2ea6a231922a5e39
  length :: [a] -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: [a]) ->
                 case ListOps.$wlength @ a w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
a0901b0e224a262bc3535a3ebd589f3b
  map :: (a -> b) -> [a] -> [b]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
7ec4878b71be3884ec0cef0d7e1b17e4
  reverse :: [a] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

